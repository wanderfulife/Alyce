{"remainingRequest":"/Users/j/Desktop/SurveyAppFirebase/survey-app/node_modules/babel-loader/lib/index.js!/Users/j/Desktop/SurveyAppFirebase/survey-app/node_modules/vue-loader-v16/dist/templateLoader.js??ref--6!/Users/j/Desktop/SurveyAppFirebase/survey-app/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/j/Desktop/SurveyAppFirebase/survey-app/node_modules/vue-loader-v16/dist/index.js??ref--1-1!/Users/j/Desktop/SurveyAppFirebase/survey-app/src/components/SurveyComponent.vue?vue&type=template&id=3ee5297a","dependencies":[{"path":"/Users/j/Desktop/SurveyAppFirebase/survey-app/src/components/SurveyComponent.vue","mtime":1704545774463},{"path":"/Users/j/Desktop/SurveyAppFirebase/survey-app/babel.config.js","mtime":1704272822118},{"path":"/Users/j/Desktop/SurveyAppFirebase/survey-app/node_modules/cache-loader/dist/cjs.js","mtime":1704272811051},{"path":"/Users/j/Desktop/SurveyAppFirebase/survey-app/node_modules/babel-loader/lib/index.js","mtime":1704272811459},{"path":"/Users/j/Desktop/SurveyAppFirebase/survey-app/node_modules/vue-loader-v16/dist/templateLoader.js","mtime":1704272811698},{"path":"/Users/j/Desktop/SurveyAppFirebase/survey-app/node_modules/cache-loader/dist/cjs.js","mtime":1704272811051},{"path":"/Users/j/Desktop/SurveyAppFirebase/survey-app/node_modules/vue-loader-v16/dist/index.js","mtime":1704272811453}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["class","_createElementVNode","for","_hoisted_1","_hoisted_2","onSubmit","_withModifiers","$setup","submitSurvey","showSecondSet","_createElementBlock","_hoisted_4","_hoisted_5","_hoisted_6","id","reponse","poste","$event","_Fragment","_renderList","postes","option","key","value","output","text","_hoisted_7","_hoisted_8","_hoisted_9","plaque","plaques","_hoisted_10","_hoisted_11","_hoisted_12","type","typeVehicule","_hoisted_13","_hoisted_14","_hoisted_15","_hoisted_16","_hoisted_17","searchQuery","onInput","onSearchInput","placeholder","filteredCommunes","length","origine","commune","_hoisted_18","_hoisted_19","_hoisted_20","occupation","_hoisted_21","_hoisted_22","onClick","returnButton","showReturnButton","disabled","isSubmitDisabled","showSubmitButton","downloadData"],"sources":["/Users/j/Desktop/SurveyAppFirebase/survey-app/src/components/SurveyComponent.vue"],"sourcesContent":["<template>\n  <div class=\"container\">\n    <h1>OD Caen</h1>\n    <form @submit.prevent=\"submitSurvey\">\n      <div v-if=\"!showSecondSet\">\n\n        <div class=\"form-group\">\n          <label for=\"poste\">Poste</label>\n          <select id=\"poste\" v-model=\"reponse.poste\" class=\"form-control\">\n            <option v-for=\"option in postes\" :key=\"option.id\" :value=\"option.output\">{{ option.text }}</option>\n          </select>\n        </div>\n\n        <div class=\"form-group\">\n          <label for=\"plaque\">Code Pays (immatriculation du véhicule plaque à l'avant):</label>\n          <select id=\"plaque\" v-model=\"reponse.plaque\" class=\"form-control\">\n            <option v-for=\"option in plaques\" :key=\"option.id\" :value=\"option.output\">{{ option.text }}</option>\n          </select>\n        </div>\n\n        <div class=\"form-group\">\n          <label for=\"type\">Type de véhicule:</label>\n          <select id=\"type\" v-model=\"reponse.type\" class=\"form-control\">\n            <option v-for=\"option in typeVehicule\" :key=\"option.id\" :value=\"option.output\">{{ option.text }}</option>\n          </select>\n        </div>\n\n    \n    </div>\n\n\n      <div v-else>\n        <div v-if=\"reponse.type <= 4\">\n               <div class=\"form-group\">\n          <label for=\"commune-search\">Origine:</label>\n          <input id=\"commune-search\" v-model=\"searchQuery\" @input=\"onSearchInput\" class=\"form-control\"\n            placeholder=\"Start typing...\">\n          <select v-if=\"filteredCommunes.length > 0\" id=\"commune\" v-model=\"reponse.origine\" class=\"form-control\">\n            <option v-for=\"commune in filteredCommunes\" :key=\"commune\" :value=\"commune\">\n              {{ commune }}\n            </option>\n          </select>\n        </div>\n            <div class=\"form-group\">\n          <label for=\"type\">Nombre d'occupants:</label>\n          <select id=\"type\" v-model=\"reponse.occupation\" class=\"form-control\">\n            <option v-for=\"option in occupation\" :key=\"option.id\" :value=\"option.output\">{{ option.text }}</option>\n          </select>\n        </div>\n        </div>\n        <div v-else-if=\"reponse.occupation > 4\">\n          PL\n        </div>\n      </div>\n      <button v-show=\"showReturnButton\" type=\"button\" @click=\"returnButton\" class=\"btn-return\">Return to First\n        Set</button>\n      <input v-show=\"showSubmitButton\" type=\"submit\" value=\"Submit\" class=\"btn-submit\" :disabled=\"isSubmitDisabled\">\n\n    </form>\n  </div>\n  <button @click=\"downloadData\" class=\"btn-data\">Download Data</button>\n</template>\n\n\n<script setup>\nimport { ref, computed, watch } from 'vue'\nimport _ from 'lodash';\nimport { postes, plaques, typeVehicule, occupation } from './reponses'\nimport { db } from '../firebaseConfig';\nimport { collection, addDoc, getDocs } from 'firebase/firestore';\nimport * as XLSX from 'xlsx';\nconst communes = ref([]);\nconst searchQuery = ref('');\nconst filteredCommunes = ref([]);\n\nconst debouncedSearch = _.debounce(query => {\n  if (query.length >= 3) {\n    filteredCommunes.value = communes.value.filter(commune =>\n      commune.toLowerCase().includes(query.toLowerCase())\n    );\n  } else {\n    filteredCommunes.value = [];\n  }\n}, 300);\n\n\nconst onSearchInput = () => {\n  debouncedSearch(searchQuery.value);\n};\n\n\n\nasync function loadCommunes() {\n  try {\n    const response = await fetch('./ANAOD.xls');\n    const arrayBuffer = await response.arrayBuffer();\n    const workbook = XLSX.read(arrayBuffer, { type: 'buffer' });\n    const firstSheetName = workbook.SheetNames[0];\n    const worksheet = workbook.Sheets[firstSheetName];\n\n    // Define 'json' here so it's accessible throughout the function\n    const json = XLSX.utils.sheet_to_json(worksheet, { header: 1 });\n\n    // Filter out empty rows and create a Set from the commune names to remove duplicates\n    const uniqueCommunes = new Set(\n      json.map(row => row[0]).filter(value => value != null)\n    );\n\n    communes.value = Array.from(uniqueCommunes);\n  } catch (error) {\n    console.error('Error loading .xls file:', error);\n  }\n}\n\n\nconst surveyCollectionRef = collection(db, \"Caen\");\nconst num = ref(1);\nconst reponse = ref({\n  poste: '',\n  plaque: '',\n  type: '',\n  num: num.value,\n  occupation: '',\n  origine: ''\n});\n\nconst showSecondSet = ref(false)\nconst showSubmitButton = ref(false)\nconst showReturnButton = ref(false)\n\nwatch(\n  () => [reponse.value.poste, reponse.value.plaque, reponse.value.type, reponse.value.occupation],\n  ([poste, plaque, type]) => {\n    if (poste !== '' && plaque !== '' && type !== '') {\n      showSecondSet.value = true;\n      showSubmitButton.value = true;\n      showReturnButton.value = true;\n    } else {\n      showSecondSet.value = false;\n      showSubmitButton.value = false;\n      showReturnButton.value = false;\n    }\n  }\n);\n\nconst returnButton = () => {\n  reponse.value.occupation = '';\n}\n\nconst isSubmitDisabled = computed(() => {\n  return reponse.value.poste === '' || reponse.value.plaque === '' || reponse.value.type === '';\n});\n\nconst submitSurvey = async () => {\n  await addDoc(surveyCollectionRef, {\n    q1: reponse.value.poste,\n    q2: new Date().toLocaleDateString('fr-FR').replace(/\\//g, '-'),\n    q4: reponse.value.num,\n    q5: new Date().toLocaleTimeString('fr-FR').slice(0, 8),\n    q6: reponse.value.plaque,\n    q7: reponse.value.type,\n    q8: reponse.value.occupation,\n    q9: reponse.value.origine\n  });\n  reponse.value.num++;\n  reponse.value.poste = '';\n  reponse.value.plaque = '';\n  reponse.value.type = '';\n  reponse.value.occupation = '';\n  reponse.value.origine = ''\n};\n\nconst downloadData = async () => {\n  try {\n    const querySnapshot = await getDocs(surveyCollectionRef);\n    let data = [];\n    let maxWidths = {};  // Object to keep track of maximum width for each column\n    const minWidth = 21;  // Minimum width in Excel units, approximately 3 cm\n\n    querySnapshot.forEach((doc) => {\n      let docData = doc.data();\n      let mappedData = {\n        Poste: docData.q1 || '',\n        Date: docData.q2 || '',\n        Numero_Enquete: doc.id,  // Firebase document ID\n        Numero_questionnaire: docData.q4 || '',\n        heure: docData.q5 || '',\n        q6: docData.q6 || '',\n        q7: docData.q7 || '',\n        q8: docData.q8 || '',\n        q9: docData.q9 || '',\n\n      };\n      data.push(mappedData);\n    });\n\n    // Sort data by 'Numero_Enquete' (Firebase document ID)\n    data.sort((a, b) => Number(a.Numero_questionnaire) - Number(b.Numero_questionnaire));\n\n    // Calculate the maximum width for each column, considering the minimum width\n    Object.keys(data[0]).forEach(key => {\n      let maxLen = Math.max(...data.map(item => item[key].toString().length), minWidth);\n      maxWidths[key] = maxLen;\n    });\n\n    // Convert data to a worksheet\n    const worksheet = XLSX.utils.json_to_sheet(data, {\n      header: [\"Poste\", \"Date\", \"Numero_Enquete\", \"Numero_questionnaire\", \"heure\", \"q6\", \"q7\", \"q8\",\"q9\"],\n      skipHeader: false\n    });\n\n    // Set the widths for each column, ensuring a minimum width\n    worksheet[\"!cols\"] = Object.keys(maxWidths).map(key => ({ wch: maxWidths[key] }));\n\n    const workbook = XLSX.utils.book_new();\n    XLSX.utils.book_append_sheet(workbook, worksheet, \"Data\");\n\n    // Export the workbook to a .xlsx file\n    XLSX.writeFile(workbook, \"OdCaen.xlsx\");\n  } catch (error) {\n    console.error(\"Error downloading data: \", error);\n  }\n};\n loadCommunes()\n</script>\n\n<style>\nbody {\n  background-color: #1e1e1e;\n}\n\n.container {\n  background-color: #1e1e1e;\n  color: white;\n  padding: 20px;\n  border-radius: 10px;\n  width: 300px;\n  margin: auto;\n}\n\n.form-group {\n  margin-bottom: 15px;\n}\n\nlabel {\n  display: block;\n  margin-bottom: 5px;\n}\n\n.form-control {\n  width: 100%;\n  padding: 10px;\n  border-radius: 5px;\n  border: 1px solid #333;\n  background-color: #333;\n  color: white;\n}\n\n.btn-submit {\n  background-color: #4CAF50;\n  color: white;\n  padding: 10px 20px;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n  width: 100%;\n}\n\n.btn-submit:hover {\n  background-color: #45a049;\n}\n\n.btn-data {\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  background-color: #4CAF50;\n  color: white;\n  padding: 10px 20px;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n  width: 100%;\n}\n\n.btn-data:hover {\n  background-color: #45a049;\n}\n\nh1 {\n  text-align: center;\n  color: #4CAF50;\n}\n</style>"],"mappings":"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"}]}