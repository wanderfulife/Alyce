{"remainingRequest":"/Users/j/Desktop/SurveyAppFirebase/survey-app/node_modules/babel-loader/lib/index.js!/Users/j/Desktop/SurveyAppFirebase/survey-app/node_modules/vue-loader-v16/dist/templateLoader.js??ref--6!/Users/j/Desktop/SurveyAppFirebase/survey-app/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/j/Desktop/SurveyAppFirebase/survey-app/node_modules/vue-loader-v16/dist/index.js??ref--1-1!/Users/j/Desktop/SurveyAppFirebase/survey-app/src/components/SurveyComponent.vue?vue&type=template&id=3ee5297a","dependencies":[{"path":"/Users/j/Desktop/SurveyAppFirebase/survey-app/src/components/SurveyComponent.vue","mtime":1704557835694},{"path":"/Users/j/Desktop/SurveyAppFirebase/survey-app/babel.config.js","mtime":1704272822118},{"path":"/Users/j/Desktop/SurveyAppFirebase/survey-app/node_modules/cache-loader/dist/cjs.js","mtime":1704272811051},{"path":"/Users/j/Desktop/SurveyAppFirebase/survey-app/node_modules/babel-loader/lib/index.js","mtime":1704272811459},{"path":"/Users/j/Desktop/SurveyAppFirebase/survey-app/node_modules/vue-loader-v16/dist/templateLoader.js","mtime":1704272811698},{"path":"/Users/j/Desktop/SurveyAppFirebase/survey-app/node_modules/cache-loader/dist/cjs.js","mtime":1704272811051},{"path":"/Users/j/Desktop/SurveyAppFirebase/survey-app/node_modules/vue-loader-v16/dist/index.js","mtime":1704272811453}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgY3JlYXRlRWxlbWVudFZOb2RlIGFzIF9jcmVhdGVFbGVtZW50Vk5vZGUsIHJlbmRlckxpc3QgYXMgX3JlbmRlckxpc3QsIEZyYWdtZW50IGFzIF9GcmFnbWVudCwgb3BlbkJsb2NrIGFzIF9vcGVuQmxvY2ssIGNyZWF0ZUVsZW1lbnRCbG9jayBhcyBfY3JlYXRlRWxlbWVudEJsb2NrLCB0b0Rpc3BsYXlTdHJpbmcgYXMgX3RvRGlzcGxheVN0cmluZywgdk1vZGVsU2VsZWN0IGFzIF92TW9kZWxTZWxlY3QsIHdpdGhEaXJlY3RpdmVzIGFzIF93aXRoRGlyZWN0aXZlcywgY3JlYXRlQ29tbWVudFZOb2RlIGFzIF9jcmVhdGVDb21tZW50Vk5vZGUsIHZNb2RlbFRleHQgYXMgX3ZNb2RlbFRleHQsIHZTaG93IGFzIF92U2hvdywgd2l0aE1vZGlmaWVycyBhcyBfd2l0aE1vZGlmaWVycyB9IGZyb20gInZ1ZSI7CmNvbnN0IF9ob2lzdGVkXzEgPSB7CiAgY2xhc3M6ICJjb250YWluZXIiCn07CmNvbnN0IF9ob2lzdGVkXzIgPSAvKiNfX1BVUkVfXyovX2NyZWF0ZUVsZW1lbnRWTm9kZSgiaDEiLCBudWxsLCAiT0QgQ2FlbiIsIC0xIC8qIEhPSVNURUQgKi8pOwpjb25zdCBfaG9pc3RlZF8zID0gWyJvblN1Ym1pdCJdOwpjb25zdCBfaG9pc3RlZF80ID0gewogIGtleTogMAp9Owpjb25zdCBfaG9pc3RlZF81ID0gewogIGNsYXNzOiAiZm9ybS1ncm91cCIKfTsKY29uc3QgX2hvaXN0ZWRfNiA9IC8qI19fUFVSRV9fKi9fY3JlYXRlRWxlbWVudFZOb2RlKCJsYWJlbCIsIHsKICBmb3I6ICJwb3N0ZSIKfSwgIlBvc3RlIiwgLTEgLyogSE9JU1RFRCAqLyk7CmNvbnN0IF9ob2lzdGVkXzcgPSBbInZhbHVlIl07CmNvbnN0IF9ob2lzdGVkXzggPSB7CiAgY2xhc3M6ICJmb3JtLWdyb3VwIgp9Owpjb25zdCBfaG9pc3RlZF85ID0gLyojX19QVVJFX18qL19jcmVhdGVFbGVtZW50Vk5vZGUoImxhYmVsIiwgewogIGZvcjogInBsYXF1ZSIKfSwgIkNvZGUgUGF5cyAoaW1tYXRyaWN1bGF0aW9uIGR1IHbDqWhpY3VsZSBwbGFxdWUgw6AgbCdhdmFudCk6IiwgLTEgLyogSE9JU1RFRCAqLyk7CmNvbnN0IF9ob2lzdGVkXzEwID0gWyJ2YWx1ZSJdOwpjb25zdCBfaG9pc3RlZF8xMSA9IHsKICBjbGFzczogImZvcm0tZ3JvdXAiCn07CmNvbnN0IF9ob2lzdGVkXzEyID0gLyojX19QVVJFX18qL19jcmVhdGVFbGVtZW50Vk5vZGUoImxhYmVsIiwgewogIGZvcjogInR5cGUiCn0sICJUeXBlIGRlIHbDqWhpY3VsZToiLCAtMSAvKiBIT0lTVEVEICovKTsKY29uc3QgX2hvaXN0ZWRfMTMgPSBbInZhbHVlIl07CmNvbnN0IF9ob2lzdGVkXzE0ID0gewogIGtleTogMQp9Owpjb25zdCBfaG9pc3RlZF8xNSA9IHsKICBrZXk6IDAKfTsKY29uc3QgX2hvaXN0ZWRfMTYgPSB7CiAgY2xhc3M6ICJmb3JtLWdyb3VwIgp9Owpjb25zdCBfaG9pc3RlZF8xNyA9IHsKICBrZXk6IDAsCiAgY2xhc3M6ICJjb21tdW5lLWRyb3Bkb3duIgp9Owpjb25zdCBfaG9pc3RlZF8xOCA9IFsib25DbGljayJdOwpjb25zdCBfaG9pc3RlZF8xOSA9IHsKICBjbGFzczogImZvcm0tZ3JvdXAiCn07CmNvbnN0IF9ob2lzdGVkXzIwID0gLyojX19QVVJFX18qL19jcmVhdGVFbGVtZW50Vk5vZGUoImxhYmVsIiwgewogIGZvcjogInR5cGUiCn0sICJOb21icmUgZCdvY2N1cGFudHM6IiwgLTEgLyogSE9JU1RFRCAqLyk7CmNvbnN0IF9ob2lzdGVkXzIxID0gWyJ2YWx1ZSJdOwpjb25zdCBfaG9pc3RlZF8yMiA9IHsKICBrZXk6IDEKfTsKY29uc3QgX2hvaXN0ZWRfMjMgPSBbImRpc2FibGVkIl07CmV4cG9ydCBmdW5jdGlvbiByZW5kZXIoX2N0eCwgX2NhY2hlLCAkcHJvcHMsICRzZXR1cCwgJGRhdGEsICRvcHRpb25zKSB7CiAgcmV0dXJuIF9vcGVuQmxvY2soKSwgX2NyZWF0ZUVsZW1lbnRCbG9jayhfRnJhZ21lbnQsIG51bGwsIFtfY3JlYXRlRWxlbWVudFZOb2RlKCJkaXYiLCBfaG9pc3RlZF8xLCBbX2hvaXN0ZWRfMiwgX2NyZWF0ZUVsZW1lbnRWTm9kZSgiZm9ybSIsIHsKICAgIG9uU3VibWl0OiBfd2l0aE1vZGlmaWVycygkc2V0dXAuc3VibWl0U3VydmV5LCBbInByZXZlbnQiXSkKICB9LCBbISRzZXR1cC5zaG93U2Vjb25kU2V0ID8gKF9vcGVuQmxvY2soKSwgX2NyZWF0ZUVsZW1lbnRCbG9jaygiZGl2IiwgX2hvaXN0ZWRfNCwgW19jcmVhdGVFbGVtZW50Vk5vZGUoImRpdiIsIF9ob2lzdGVkXzUsIFtfaG9pc3RlZF82LCBfd2l0aERpcmVjdGl2ZXMoX2NyZWF0ZUVsZW1lbnRWTm9kZSgic2VsZWN0IiwgewogICAgaWQ6ICJwb3N0ZSIsCiAgICAib25VcGRhdGU6bW9kZWxWYWx1ZSI6IF9jYWNoZVswXSB8fCAoX2NhY2hlWzBdID0gJGV2ZW50ID0+ICRzZXR1cC5yZXBvbnNlLnBvc3RlID0gJGV2ZW50KSwKICAgIGNsYXNzOiAiZm9ybS1jb250cm9sIgogIH0sIFsoX29wZW5CbG9jayh0cnVlKSwgX2NyZWF0ZUVsZW1lbnRCbG9jayhfRnJhZ21lbnQsIG51bGwsIF9yZW5kZXJMaXN0KCRzZXR1cC5wb3N0ZXMsIG9wdGlvbiA9PiB7CiAgICByZXR1cm4gX29wZW5CbG9jaygpLCBfY3JlYXRlRWxlbWVudEJsb2NrKCJvcHRpb24iLCB7CiAgICAgIGtleTogb3B0aW9uLmlkLAogICAgICB2YWx1ZTogb3B0aW9uLm91dHB1dAogICAgfSwgX3RvRGlzcGxheVN0cmluZyhvcHRpb24udGV4dCksIDkgLyogVEVYVCwgUFJPUFMgKi8sIF9ob2lzdGVkXzcpOwogIH0pLCAxMjggLyogS0VZRURfRlJBR01FTlQgKi8pKV0sIDUxMiAvKiBORUVEX1BBVENIICovKSwgW1tfdk1vZGVsU2VsZWN0LCAkc2V0dXAucmVwb25zZS5wb3N0ZV1dKV0pLCBfY3JlYXRlRWxlbWVudFZOb2RlKCJkaXYiLCBfaG9pc3RlZF84LCBbX2hvaXN0ZWRfOSwgX3dpdGhEaXJlY3RpdmVzKF9jcmVhdGVFbGVtZW50Vk5vZGUoInNlbGVjdCIsIHsKICAgIGlkOiAicGxhcXVlIiwKICAgICJvblVwZGF0ZTptb2RlbFZhbHVlIjogX2NhY2hlWzFdIHx8IChfY2FjaGVbMV0gPSAkZXZlbnQgPT4gJHNldHVwLnJlcG9uc2UucGxhcXVlID0gJGV2ZW50KSwKICAgIGNsYXNzOiAiZm9ybS1jb250cm9sIgogIH0sIFsoX29wZW5CbG9jayh0cnVlKSwgX2NyZWF0ZUVsZW1lbnRCbG9jayhfRnJhZ21lbnQsIG51bGwsIF9yZW5kZXJMaXN0KCRzZXR1cC5wbGFxdWVzLCBvcHRpb24gPT4gewogICAgcmV0dXJuIF9vcGVuQmxvY2soKSwgX2NyZWF0ZUVsZW1lbnRCbG9jaygib3B0aW9uIiwgewogICAgICBrZXk6IG9wdGlvbi5pZCwKICAgICAgdmFsdWU6IG9wdGlvbi5vdXRwdXQKICAgIH0sIF90b0Rpc3BsYXlTdHJpbmcob3B0aW9uLnRleHQpLCA5IC8qIFRFWFQsIFBST1BTICovLCBfaG9pc3RlZF8xMCk7CiAgfSksIDEyOCAvKiBLRVlFRF9GUkFHTUVOVCAqLykpXSwgNTEyIC8qIE5FRURfUEFUQ0ggKi8pLCBbW192TW9kZWxTZWxlY3QsICRzZXR1cC5yZXBvbnNlLnBsYXF1ZV1dKV0pLCBfY3JlYXRlRWxlbWVudFZOb2RlKCJkaXYiLCBfaG9pc3RlZF8xMSwgW19ob2lzdGVkXzEyLCBfd2l0aERpcmVjdGl2ZXMoX2NyZWF0ZUVsZW1lbnRWTm9kZSgic2VsZWN0IiwgewogICAgaWQ6ICJ0eXBlIiwKICAgICJvblVwZGF0ZTptb2RlbFZhbHVlIjogX2NhY2hlWzJdIHx8IChfY2FjaGVbMl0gPSAkZXZlbnQgPT4gJHNldHVwLnJlcG9uc2UudHlwZSA9ICRldmVudCksCiAgICBjbGFzczogImZvcm0tY29udHJvbCIKICB9LCBbKF9vcGVuQmxvY2sodHJ1ZSksIF9jcmVhdGVFbGVtZW50QmxvY2soX0ZyYWdtZW50LCBudWxsLCBfcmVuZGVyTGlzdCgkc2V0dXAudHlwZVZlaGljdWxlLCBvcHRpb24gPT4gewogICAgcmV0dXJuIF9vcGVuQmxvY2soKSwgX2NyZWF0ZUVsZW1lbnRCbG9jaygib3B0aW9uIiwgewogICAgICBrZXk6IG9wdGlvbi5pZCwKICAgICAgdmFsdWU6IG9wdGlvbi5vdXRwdXQKICAgIH0sIF90b0Rpc3BsYXlTdHJpbmcob3B0aW9uLnRleHQpLCA5IC8qIFRFWFQsIFBST1BTICovLCBfaG9pc3RlZF8xMyk7CiAgfSksIDEyOCAvKiBLRVlFRF9GUkFHTUVOVCAqLykpXSwgNTEyIC8qIE5FRURfUEFUQ0ggKi8pLCBbW192TW9kZWxTZWxlY3QsICRzZXR1cC5yZXBvbnNlLnR5cGVdXSldKV0pKSA6IChfb3BlbkJsb2NrKCksIF9jcmVhdGVFbGVtZW50QmxvY2soImRpdiIsIF9ob2lzdGVkXzE0LCBbJHNldHVwLnJlcG9uc2UudHlwZSA8PSA0ID8gKF9vcGVuQmxvY2soKSwgX2NyZWF0ZUVsZW1lbnRCbG9jaygiZGl2IiwgX2hvaXN0ZWRfMTUsIFtfY3JlYXRlRWxlbWVudFZOb2RlKCJkaXYiLCBfaG9pc3RlZF8xNiwgW193aXRoRGlyZWN0aXZlcyhfY3JlYXRlRWxlbWVudFZOb2RlKCJpbnB1dCIsIHsKICAgIGNsYXNzOiAiZm9ybS1jb250cm9sIiwKICAgIHR5cGU6ICJ0ZXh0IiwKICAgICJvblVwZGF0ZTptb2RlbFZhbHVlIjogX2NhY2hlWzNdIHx8IChfY2FjaGVbM10gPSAkZXZlbnQgPT4gJHNldHVwLnVzZXJJbnB1dCA9ICRldmVudCksCiAgICBwbGFjZWhvbGRlcjogIkVudHJlciBsZXMgcHJlbWllcmUgbGV0dHJlcyBkZSBsYSBDT01NVU5FIgogIH0sIG51bGwsIDUxMiAvKiBORUVEX1BBVENIICovKSwgW1tfdk1vZGVsVGV4dCwgJHNldHVwLnVzZXJJbnB1dF1dKSwgJHNldHVwLnVzZXJJbnB1dCAmJiAkc2V0dXAuZmlsdGVyZWRDb21tdW5lcy5sZW5ndGggPyAoX29wZW5CbG9jaygpLCBfY3JlYXRlRWxlbWVudEJsb2NrKCJ1bCIsIF9ob2lzdGVkXzE3LCBbKF9vcGVuQmxvY2sodHJ1ZSksIF9jcmVhdGVFbGVtZW50QmxvY2soX0ZyYWdtZW50LCBudWxsLCBfcmVuZGVyTGlzdCgkc2V0dXAuZmlsdGVyZWRDb21tdW5lcywgKGl0ZW0sIGluZGV4KSA9PiB7CiAgICByZXR1cm4gX29wZW5CbG9jaygpLCBfY3JlYXRlRWxlbWVudEJsb2NrKCJsaSIsIHsKICAgICAga2V5OiBpdGVtWydDT0RFIElOU0VFJ10sCiAgICAgIG9uQ2xpY2s6ICRldmVudCA9PiAkc2V0dXAuc2VsZWN0Q29tbXVuZShpdGVtLkNPTU1VTkUpCiAgICB9LCBfdG9EaXNwbGF5U3RyaW5nKGl0ZW0uQ09NTVVORSksIDkgLyogVEVYVCwgUFJPUFMgKi8sIF9ob2lzdGVkXzE4KTsKICB9KSwgMTI4IC8qIEtFWUVEX0ZSQUdNRU5UICovKSldKSkgOiBfY3JlYXRlQ29tbWVudFZOb2RlKCJ2LWlmIiwgdHJ1ZSldKSwgX2NyZWF0ZUVsZW1lbnRWTm9kZSgiZGl2IiwgX2hvaXN0ZWRfMTksIFtfaG9pc3RlZF8yMCwgX3dpdGhEaXJlY3RpdmVzKF9jcmVhdGVFbGVtZW50Vk5vZGUoInNlbGVjdCIsIHsKICAgIGlkOiAidHlwZSIsCiAgICAib25VcGRhdGU6bW9kZWxWYWx1ZSI6IF9jYWNoZVs0XSB8fCAoX2NhY2hlWzRdID0gJGV2ZW50ID0+ICRzZXR1cC5yZXBvbnNlLm9jY3VwYXRpb24gPSAkZXZlbnQpLAogICAgY2xhc3M6ICJmb3JtLWNvbnRyb2wiCiAgfSwgWyhfb3BlbkJsb2NrKHRydWUpLCBfY3JlYXRlRWxlbWVudEJsb2NrKF9GcmFnbWVudCwgbnVsbCwgX3JlbmRlckxpc3QoJHNldHVwLm9jY3VwYXRpb24sIG9wdGlvbiA9PiB7CiAgICByZXR1cm4gX29wZW5CbG9jaygpLCBfY3JlYXRlRWxlbWVudEJsb2NrKCJvcHRpb24iLCB7CiAgICAgIGtleTogb3B0aW9uLmlkLAogICAgICB2YWx1ZTogb3B0aW9uLm91dHB1dAogICAgfSwgX3RvRGlzcGxheVN0cmluZyhvcHRpb24udGV4dCksIDkgLyogVEVYVCwgUFJPUFMgKi8sIF9ob2lzdGVkXzIxKTsKICB9KSwgMTI4IC8qIEtFWUVEX0ZSQUdNRU5UICovKSldLCA1MTIgLyogTkVFRF9QQVRDSCAqLyksIFtbX3ZNb2RlbFNlbGVjdCwgJHNldHVwLnJlcG9uc2Uub2NjdXBhdGlvbl1dKV0pXSkpIDogJHNldHVwLnJlcG9uc2Uub2NjdXBhdGlvbiA+IDQgPyAoX29wZW5CbG9jaygpLCBfY3JlYXRlRWxlbWVudEJsb2NrKCJkaXYiLCBfaG9pc3RlZF8yMiwgIlBMIikpIDogX2NyZWF0ZUNvbW1lbnRWTm9kZSgidi1pZiIsIHRydWUpXSkpLCBfd2l0aERpcmVjdGl2ZXMoX2NyZWF0ZUVsZW1lbnRWTm9kZSgiYnV0dG9uIiwgewogICAgdHlwZTogImJ1dHRvbiIsCiAgICBvbkNsaWNrOiAkc2V0dXAucmV0dXJuQnV0dG9uLAogICAgY2xhc3M6ICJidG4tcmV0dXJuIgogIH0sICIgUmV0dXJuIHRvIEZpcnN0IFNldCAiLCA1MTIgLyogTkVFRF9QQVRDSCAqLyksIFtbX3ZTaG93LCAkc2V0dXAuc2hvd1JldHVybkJ1dHRvbl1dKSwgX3dpdGhEaXJlY3RpdmVzKF9jcmVhdGVFbGVtZW50Vk5vZGUoImlucHV0IiwgewogICAgdHlwZTogInN1Ym1pdCIsCiAgICB2YWx1ZTogIlN1Ym1pdCIsCiAgICBjbGFzczogImJ0bi1zdWJtaXQiLAogICAgZGlzYWJsZWQ6ICRzZXR1cC5pc1N1Ym1pdERpc2FibGVkCiAgfSwgbnVsbCwgOCAvKiBQUk9QUyAqLywgX2hvaXN0ZWRfMjMpLCBbW192U2hvdywgJHNldHVwLnNob3dTdWJtaXRCdXR0b25dXSldLCA0MCAvKiBQUk9QUywgSFlEUkFURV9FVkVOVFMgKi8sIF9ob2lzdGVkXzMpXSksIF9jcmVhdGVFbGVtZW50Vk5vZGUoImJ1dHRvbiIsIHsKICAgIG9uQ2xpY2s6ICRzZXR1cC5kb3dubG9hZERhdGEsCiAgICBjbGFzczogImJ0bi1kYXRhIgogIH0sICJEb3dubG9hZCBEYXRhIildLCA2NCAvKiBTVEFCTEVfRlJBR01FTlQgKi8pOwp9"},{"version":3,"names":["class","_createElementVNode","for","_hoisted_1","_hoisted_2","onSubmit","_withModifiers","$setup","submitSurvey","showSecondSet","_createElementBlock","_hoisted_4","_hoisted_5","_hoisted_6","id","reponse","poste","$event","_Fragment","_renderList","postes","option","key","value","output","text","_hoisted_7","_hoisted_8","_hoisted_9","plaque","plaques","_hoisted_10","_hoisted_11","_hoisted_12","type","typeVehicule","_hoisted_13","_hoisted_14","_hoisted_15","_hoisted_16","userInput","placeholder","filteredCommunes","length","_hoisted_17","item","index","onClick","selectCommune","COMMUNE","_hoisted_18","_hoisted_19","_hoisted_20","occupation","_hoisted_21","_hoisted_22","returnButton","showReturnButton","disabled","isSubmitDisabled","showSubmitButton","downloadData"],"sources":["/Users/j/Desktop/SurveyAppFirebase/survey-app/src/components/SurveyComponent.vue"],"sourcesContent":["<template>\n  <div class=\"container\">\n    <h1>OD Caen</h1>\n    <form @submit.prevent=\"submitSurvey\">\n      <div v-if=\"!showSecondSet\">\n        <div class=\"form-group\">\n          <label for=\"poste\">Poste</label>\n          <select id=\"poste\" v-model=\"reponse.poste\" class=\"form-control\">\n            <option v-for=\"option in postes\" :key=\"option.id\" :value=\"option.output\">\n              {{ option.text }}\n            </option>\n          </select>\n        </div>\n\n        <div class=\"form-group\">\n          <label for=\"plaque\">Code Pays (immatriculation du véhicule plaque à l'avant):</label>\n          <select id=\"plaque\" v-model=\"reponse.plaque\" class=\"form-control\">\n            <option v-for=\"option in plaques\" :key=\"option.id\" :value=\"option.output\">\n              {{ option.text }}\n            </option>\n          </select>\n        </div>\n\n        <div class=\"form-group\">\n          <label for=\"type\">Type de véhicule:</label>\n          <select id=\"type\" v-model=\"reponse.type\" class=\"form-control\">\n            <option v-for=\"option in typeVehicule\" :key=\"option.id\" :value=\"option.output\">\n              {{ option.text }}\n            </option>\n          </select>\n        </div>\n      </div>\n\n      <div v-else>\n        <div v-if=\"reponse.type <= 4\">\n\n           <div class=\"form-group\">\n    <input\n      class=\"form-control\"\n      type=\"text\"\n      v-model=\"userInput\"\n      placeholder=\"Entrer les premiere lettres de la COMMUNE\"\n    />\n    <ul v-if=\"userInput && filteredCommunes.length\" class=\"commune-dropdown\">\n      <li \n        v-for=\"(item, index) in filteredCommunes\" \n        :key=\"item['CODE INSEE']\" \n        @click=\"selectCommune(item.COMMUNE)\"\n      >\n        {{ item.COMMUNE }}\n      </li>\n    </ul>\n  </div>\n\n          <div class=\"form-group\">\n            <label for=\"type\">Nombre d'occupants:</label>\n            <select id=\"type\" v-model=\"reponse.occupation\" class=\"form-control\">\n              <option v-for=\"option in occupation\" :key=\"option.id\" :value=\"option.output\">\n                {{ option.text }}\n              </option>\n            </select>\n          </div>\n        </div>\n        <div v-else-if=\"reponse.occupation > 4\">PL</div>\n      </div>\n      <button v-show=\"showReturnButton\" type=\"button\" @click=\"returnButton\" class=\"btn-return\">\n        Return to First Set\n      </button>\n      <input v-show=\"showSubmitButton\" type=\"submit\" value=\"Submit\" class=\"btn-submit\" :disabled=\"isSubmitDisabled\" />\n    </form>\n  </div>\n  <button @click=\"downloadData\" class=\"btn-data\">Download Data</button>\n</template>\n\n<script setup>\nimport { ref, computed, watch } from \"vue\";\nimport { postes, plaques, typeVehicule, occupation } from \"./reponses\";\nimport insee from \"./output.json\";\nimport { db } from \"../firebaseConfig\";\nimport * as XLSX from \"xlsx\";\nimport { collection, addDoc, getDocs } from \"firebase/firestore\";\n\nconst userInput = ref(\"\");\nconst data = ref(insee);\n\nconst surveyCollectionRef = collection(db, \"Caen\");\nconst num = ref(1);\nconst reponse = ref({\n  poste: \"\",\n  plaque: \"\",\n  type: \"\",\n  num: num.value,\n  occupation: \"\",\n  origine: \"\",\n});\n\nconst showSecondSet = ref(false);\nconst showSubmitButton = ref(false);\nconst showReturnButton = ref(false);\n\nwatch(\n  () => [\n    reponse.value.poste,\n    reponse.value.plaque,\n    reponse.value.type,\n    reponse.value.occupation,\n  ],\n  ([poste, plaque, type]) => {\n    if (poste !== \"\" && plaque !== \"\" && type !== \"\") {\n      showSecondSet.value = true;\n      showSubmitButton.value = true;\n      showReturnButton.value = true;\n    } else {\n      showSecondSet.value = false;\n      showSubmitButton.value = false;\n      showReturnButton.value = false;\n    }\n  }\n);\n\nconst filteredCommunes = computed(() => {\n  return data.value.filter(item =>\n    item.COMMUNE.toLowerCase().includes(userInput.value.toLowerCase())\n  );\n});\n\nconst selectCommune = (commune) => {\n  userInput.value = commune;\n};\n\n\nconst returnButton = () => {\n  reponse.value.type = \"\";\n};\n\nconst isSubmitDisabled = computed(() => {\n  return (\n    reponse.value.poste === \"\" ||\n    reponse.value.plaque === \"\" ||\n    reponse.value.type === \"\"\n  );\n});\n\nconst submitSurvey = async () => {\n  await addDoc(surveyCollectionRef, {\n    q1: reponse.value.poste,\n    q2: new Date().toLocaleDateString(\"fr-FR\").replace(/\\//g, \"-\"),\n    q4: reponse.value.num,\n    q5: new Date().toLocaleTimeString(\"fr-FR\").slice(0, 8),\n    q6: reponse.value.plaque,\n    q7: reponse.value.type,\n    q8: reponse.value.occupation,\n    q9: reponse.value.origine,\n  });\n  reponse.value.num++;\n  reponse.value.poste = \"\";\n  reponse.value.plaque = \"\";\n  reponse.value.type = \"\";\n  reponse.value.occupation = \"\";\n  reponse.value.origine = \"\";\n};\n\nconst downloadData = async () => {\n  try {\n    const querySnapshot = await getDocs(surveyCollectionRef);\n    let data = [];\n    let maxWidths = {}; // Object to keep track of maximum width for each column\n    const minWidth = 21; // Minimum width in Excel units, approximately 3 cm\n\n    querySnapshot.forEach((doc) => {\n      let docData = doc.data();\n      let mappedData = {\n        Poste: docData.q1 || \"\",\n        Date: docData.q2 || \"\",\n        Numero_Enquete: doc.id, // Firebase document ID\n        Numero_questionnaire: docData.q4 || \"\",\n        heure: docData.q5 || \"\",\n        q6: docData.q6 || \"\",\n        q7: docData.q7 || \"\",\n        q8: docData.q8 || \"\",\n        q9: docData.q9 || \"\",\n      };\n      data.push(mappedData);\n    });\n\n    // Sort data by 'Numero_Enquete' (Firebase document ID)\n    data.sort(\n      (a, b) => Number(a.Numero_questionnaire) - Number(b.Numero_questionnaire)\n    );\n\n    // Calculate the maximum width for each column, considering the minimum width\n    Object.keys(data[0]).forEach((key) => {\n      let maxLen = Math.max(\n        ...data.map((item) => item[key].toString().length),\n        minWidth\n      );\n      maxWidths[key] = maxLen;\n    });\n\n    // Convert data to a worksheet\n    const worksheet = XLSX.utils.json_to_sheet(data, {\n      header: [\n        \"Poste\",\n        \"Date\",\n        \"Numero_Enquete\",\n        \"Numero_questionnaire\",\n        \"heure\",\n        \"q6\",\n        \"q7\",\n        \"q8\",\n        \"q9\",\n      ],\n      skipHeader: false,\n    });\n\n    // Set the widths for each column, ensuring a minimum width\n    worksheet[\"!cols\"] = Object.keys(maxWidths).map((key) => ({\n      wch: maxWidths[key],\n    }));\n\n    const workbook = XLSX.utils.book_new();\n    XLSX.utils.book_append_sheet(workbook, worksheet, \"Data\");\n\n    // Export the workbook to a .xlsx file\n    XLSX.writeFile(workbook, \"OdCaen.xlsx\");\n  } catch (error) {\n    console.error(\"Error downloading data: \", error);\n  }\n};\n</script>\n\n<style>\nbody {\n  background-color: #1e1e1e;\n}\n\n.container {\n  background-color: #1e1e1e;\n  color: white;\n  padding: 20px;\n  border-radius: 10px;\n  width: 300px;\n  margin: auto;\n}\n\n.form-group {\n  margin-bottom: 15px;\n}\n\nlabel {\n  display: block;\n  margin-bottom: 5px;\n}\n\n.form-control {\n  width: 100%;\n  padding: 10px;\n  border-radius: 5px;\n  border: 1px solid #333;\n  background-color: #333;\n  color: white;\n}\n\n.btn-submit {\n  background-color: #4caf50;\n  color: white;\n  padding: 10px 20px;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n  width: 100%;\n}\n\n.btn-submit:hover {\n  background-color: #45a049;\n}\n\n.btn-data {\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  background-color: #4caf50;\n  color: white;\n  padding: 10px 20px;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n  width: 100%;\n}\n\n.btn-data:hover {\n  background-color: #45a049;\n}\n\nh1 {\n  text-align: center;\n  color: #4caf50;\n}\n\n.commune-dropdown {\n  /* Style your dropdown list here */\n  list-style-type: none;\n  padding: 0;\n  margin: 0;\n  border: 1px solid #ccc;\n  border-radius: 4px;\n  max-height: 200px;\n  overflow-y: auto;\n}\n\n.commune-dropdown li {\n  padding: 5px 10px;\n  cursor: pointer;\n}\n\n.commune-dropdown li:hover {\n  background-color: #f0f0f0;\n}\n</style>\n"],"mappings":"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"}]}